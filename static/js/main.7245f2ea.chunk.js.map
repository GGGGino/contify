{"version":3,"sources":["reportWebVitals.ts","Components/Home.tsx","Components/InnerHeader.tsx","Components/QrcodeScannerPlugin.tsx","Components/AdminPage.tsx","Components/UserPage.tsx","Components/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","itemStyle","minHeight","className","style","height","to","InnerHeader","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","QrScanner","WORKER_PATH","process","QrcodeScannerPlugin","qrScanner","timerId","wait","setTimeout","videoElem","document","getElementById","result","props","onQrcodeScanned","stop","parentNode","appendChild","$canvas","start","this","console","log","destroy","id","callback","delay","clearTimeout","undefined","React","AdminPage","useState","qrcodes","setQrcodes","showModal","setShowModal","slaveToEdit","setSlaveToEdit","handleClose","codesDoms","map","qrCode","index","jsonDecoded","JSON","parse","atob","alreadyPutted","maxToPut","Col","xs","md","Card","Header","Title","name","ListGroup","ListGroupItem","Body","Button","variant","onClick","indexToChange","indexToRemove","splice","Row","sm","Modal","show","onHide","closeButton","qrCodeScanned","push","UserPage","myInfoScope","setInfo","qrCodeDOM","value","btoa","stringify","handleInputChange","event","target","Form","Group","controlId","Label","Control","type","placeholder","onChange","Text","myInfo","maxImporto","App","path","GenerateCode","Capture","myInfoBase64","accept","capture","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7245f2ea.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Home() {\n  const itemStyle = {minHeight: '50%'};\n\n  return (\n    <div className=\"d-md-flex flex-md-equal w-100 py-md-3 ps-md-3\" style={{height: '100vh'}}>\n      <div className=\"bg-light me-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden\" style={itemStyle}>\n        <div className=\"my-3 py-3\">\n          <h2 className=\"display-5\">Manager</h2>\n          <p className=\"lead\">Handle the process of organizing the users and the prize they have to put in.</p>\n          <Link className=\"btn btn-outline-secondary\" to=\"/admin-page\">Go</Link>\n        </div>\n      </div>\n      <div className=\"bg-dark me-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden text-white\" style={itemStyle}>\n        <div className=\"my-3 p-3\">\n          <h2 className=\"display-5\">User</h2>\n          <p className=\"lead\">Use this to only set your personal and economical information.</p>\n          <Link className=\"btn btn-outline-secondary\" to=\"/user-page\">Go</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {Navbar, Container} from \"react-bootstrap\";\n\nexport default function InnerHeader() {\n  return <Navbar bg=\"light\" expand=\"lg\">\n    <Container>\n      <Navbar.Brand href=\"/\">Contify</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    </Container>\n  </Navbar>;\n}\n","import * as React from \"react\";\nimport QrScanner from 'qr-scanner';\nQrScanner.WORKER_PATH = process.env.REACT_APP_BASE_FOLDER + '/qr-scanner-worker.min.js';\n\ninterface QrcodeScannerProps {\n  onQrcodeScanned: (qrCodeScanned: string) => any;\n}\n\nexport class QrcodeScannerPlugin extends React.Component<QrcodeScannerProps> {\n  private qrScanner?: QrScanner;\n  private timerId: any;\n  private wait?: () => any;\n\n  componentDidMount() {\n    setTimeout(() => {\n      const videoElem = document.getElementById('qr-video') as HTMLVideoElement;\n\n      this.qrScanner = new QrScanner(videoElem, (result: string) => {\n        this.props.onQrcodeScanned(result);\n        this.qrScanner!.stop();\n      });\n\n      videoElem.parentNode!.appendChild(((this.qrScanner as any).$canvas) as Node);\n\n      this.qrScanner.start();\n    }, 200);\n  }\n\n  componentWillUnmount() {\n    if (!this.qrScanner) { return; }\n\n    console.log('unoount');\n\n    this.qrScanner.destroy();\n  }\n\n  render() {\n    return <video id=\"qr-video\" />;\n  }\n\n  debounceFn(callback: () => any, delay: number) {\n    // Cancels the setTimeout method execution\n    clearTimeout(this.timerId);\n\n    // Executes the func after delay time.\n    this.timerId = setTimeout(callback, delay);\n  }\n\n  debounce(callback: () => any, delay: number) {\n    if (this.wait) {\n      return;\n    }\n\n    this.wait = callback;\n\n    setTimeout(() => {\n      console.log('insideTimout');\n      this.wait!();\n      this.wait = undefined;\n    }, delay);\n  }\n}\n","import React, {useState} from \"react\";\nimport {Button, Card, Col, Container, ListGroup, ListGroupItem, Modal, Row, Table} from \"react-bootstrap\";\nimport InnerHeader from \"./InnerHeader\";\nimport {QrcodeScannerPlugin} from \"./QrcodeScannerPlugin\";\n\nexport default function AdminPage() {\n  const [qrcodes, setQrcodes] = useState<Array<string>>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [slaveToEdit, setSlaveToEdit] = useState<number|null>(null);\n\n  const openModalEditSlave = (indexToChange: number) => {\n    setShowModal(true);\n    setSlaveToEdit(indexToChange);\n  };\n\n  const openModalAddSlave = () => {\n    setShowModal(true);\n  };\n\n  const removeSlave = (indexToRemove: number) => {\n    qrcodes.splice(indexToRemove, 1);\n    setQrcodes([...qrcodes]);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const calculate = () => {\n    setShowModal(false);\n  };\n\n  const eraseSlaves = () => {\n    setQrcodes([]);\n  };\n\n  const onQrcodeScanned = (qrCodeScanned: string) => {\n    handleClose();\n    console.log(slaveToEdit);\n\n    if (slaveToEdit !== null) {\n      qrcodes[slaveToEdit] = qrCodeScanned;\n    } else {\n      qrcodes.push(qrCodeScanned);\n    }\n    setQrcodes([...qrcodes]);\n  };\n\n  const codesDoms = qrcodes.map((qrCode, index) => {\n    const jsonDecoded: any = JSON.parse(atob(qrCode));\n    const alreadyPutted = jsonDecoded.alreadyPutted === null ? '-' : jsonDecoded.alreadyPutted;\n    const maxToPut = jsonDecoded.maxToPut === null ? '-' : jsonDecoded.maxToPut;\n\n    return (<Col key={index} className=\"py-3\" xs={12} md={4}>\n      <Card>\n        <Card.Header>\n          <Card.Title>{jsonDecoded.name}</Card.Title>\n        </Card.Header>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroupItem>Already putted: <strong>{alreadyPutted}</strong> €</ListGroupItem>\n          <ListGroupItem>Max: <strong>{maxToPut}</strong> €</ListGroupItem>\n        </ListGroup>\n        <Card.Body>\n          <Button variant=\"secondary\" onClick={() => openModalEditSlave(index)}>Change</Button>\n          <Button variant=\"danger\" onClick={() => removeSlave(index)}>Remove</Button>\n        </Card.Body>\n      </Card>\n    </Col>);\n  });\n\n  return <div>\n    <InnerHeader/>\n    <Container className=\"py-3\">\n      <Row>\n        <Col sm={12}>\n          <Button variant=\"primary\" onClick={openModalAddSlave}>Add slave</Button>\n          <Button variant=\"danger\" onClick={eraseSlaves}>Erase</Button>\n          <Row className=\"py-3\">\n            {codesDoms}\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <Button variant=\"success\" onClick={calculate}>Calculate</Button>\n        </Col>\n      </Row>\n    </Container>\n\n    <Modal show={showModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <QrcodeScannerPlugin onQrcodeScanned={onQrcodeScanned} />\n      </Modal.Body>\n    </Modal>\n  </div>;\n}\n","import React, {useState} from \"react\";\nimport InnerHeader from \"./InnerHeader\";\nimport {Button, Col, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport QRCode from \"react-qr-code\";\n\nexport default function UserPage() {\n  const [myInfoScope, setInfo]: [any, any] = useState({\n    name: 'Gino',\n    alreadyPutted: 0,\n    maxToPut: null\n  });\n  const [showModal, setShowModal] = useState(false);\n\n  const qrCodeDOM = showModal\n    ? <QRCode value={btoa(JSON.stringify(myInfoScope))} />\n    : null;\n\n  const handleInputChange = (event: any) => {\n    const target = event.target;\n    const name = target.id;\n\n    setInfo({...myInfoScope, [name]: target.value});\n  };\n\n  const handleGenerate = (event: any) => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  return <div>\n    <InnerHeader />\n    <Container className=\"py-3\">\n      <Row>\n        <Col>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Name\" onChange={handleInputChange} />\n              <Form.Text className=\"text-muted\">\n                Set your name\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"alreadyPutted\">\n              <Form.Label>Already putted</Form.Label>\n              <Form.Control type=\"number\" placeholder=\"0\" onChange={handleInputChange}/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"maxToPut\">\n              <Form.Label>Max import</Form.Label>\n              <Form.Control type=\"number\" placeholder=\"0\" onChange={handleInputChange}/>\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={handleGenerate}>\n              Generate\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n\n    <Modal show={showModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{qrCodeDOM}</Modal.Body>\n    </Modal>\n  </div>;\n}\n","import React from \"react\";\nimport QRCode from \"react-qr-code\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport reportWebVitals from \"../reportWebVitals\";\nimport Home from \"./Home\";\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AdminPage from \"./AdminPage\";\nimport UserPage from \"./UserPage\";\n\nconst myInfo: any = {\n  name: 'Gino',\n  maxImporto: 0\n};\n\nexport default function App() {\n  reportWebVitals(console.log);\n\n  return (\n    <Router>\n      <>\n        <main>\n          <Switch>\n            <Route path=\"/generate-code\">\n              <GenerateCode />\n            </Route>\n            <Route path=\"/capture\">\n              <Capture />\n            </Route>\n            <Route path=\"/user-page\">\n              <UserPage />\n            </Route>\n            <Route path=\"/admin-page\">\n              <AdminPage />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </main>\n      </>\n    </Router>\n  );\n}\n\nfunction GenerateCode() {\n  const myInfoBase64 = btoa(JSON.stringify(myInfo));\n  return <QRCode value={myInfoBase64} />;\n}\n\nfunction Capture() {\n  return <input type=\"file\" name=\"image\" accept=\"image/*\" capture=\"environment\" />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}